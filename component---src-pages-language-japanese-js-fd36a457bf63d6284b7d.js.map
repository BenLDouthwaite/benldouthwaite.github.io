{"version":3,"sources":["webpack://bendouthwaite.com/./src/pages/language/japanese.js"],"names":["data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","console","log","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp"],"mappings":"oKAmDA,UA9CsB,SAAC,GAAwB,IAAD,EAArBA,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACvBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAIrC,OAFAC,QAAQC,IAAIJ,GAGV,gBAAC,IAAD,CAAQL,SAAUA,EAAUI,MAAOH,GACjC,sCACA,mHAIA,sBAAIS,MAAO,CAAEC,UAAU,SACpBN,EAAMO,KAAI,SAAAC,GACT,IAAMT,EAAQS,EAAKC,YAAYV,OAASS,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYnB,MAG9B,SAQb","file":"component---src-pages-language-japanese-js-fd36a457bf63d6284b7d.js","sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../../components/layout\"\n\nconst JapaneseIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  console.log(posts)\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>Japanese</h1>\n      <p>\n        Want to add query to link out to sub pages below. Below examples use\n        tags with GraphQL\n      </p>\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  {false && <small>{post.frontmatter.date}</small>}\n                </header>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n\n      <p>\n        How to do using slug prefix / regex? Seems to be the wrong design. I\n        want a hierarchical layout, if easy\n      </p>\n    </Layout>\n  )\n}\n\nexport default JapaneseIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: \"japanese\" } } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}