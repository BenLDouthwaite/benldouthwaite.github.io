{"version":3,"sources":["webpack://bendouthwaite.com/./src/components/Canvas.js","webpack://bendouthwaite.com/./src/components/random-helpers.js","webpack://bendouthwaite.com/./src/components/Hexagon.js","webpack://bendouthwaite.com/./src/pages/sandbox/CanvasPage.js","webpack://bendouthwaite.com/./src/components/use-dimensions.js","webpack://bendouthwaite.com/./node_modules/lodash/_baseRandom.js","webpack://bendouthwaite.com/./node_modules/lodash/random.js"],"names":["CanvasContext","React","FrameContext","Canvas","height","width","dpr","isAnimating","children","canvasRef","actualWidth","actualHeight","context","setContext","current","canvasContext","getContext","scale","globalCompositeOperation","frameCount","setFrameCount","frameId","requestAnimationFrame","cancelAnimationFrame","random","clearRect","Provider","value","ref","style","getPositionBetween","min","max","variance","getRandomColor","baseHue","hueVariance","getRandomHexagon","baseSize","x","y","size","positionVariance","Math","round","isArray","Xmin","Xmax","Ymin","Ymax","color","initialRotation","rotationSpeed","Hexagon","initialValue","valueUpdater","animatedValue","animatedAngle","angleValue","edgeLength","beginPath","forEach","angle","index","radAngle","PI","point","cos","sin","moveTo","lineTo","fillStyle","fill","useState","dimensions","setDimensions","node","setNode","useCallback","useEffect","undefined","request","measure","window","console","log","rect","getBoundingClientRect","devicePixelRatio","resizeListener","debounce","addEventListener","removeEventListener","useDimensions","smallerSize","cornerHexagons","i","j","push","extraHexagons","Array","map","getHexagonsToFillZone","hexagon","key","nativeFloor","floor","nativeRandom","module","exports","lower","upper","baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","floating","temp","rand","length"],"mappings":"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","file":"component---src-pages-sandbox-canvas-page-js-4a58880cb65fc8ac8131.js","sourcesContent":["import * as React from \"react\"\nimport random from \"lodash/random\"\n\nconst CanvasContext = React.createContext(null)\nconst FrameContext = React.createContext(0)\n\nexport const Canvas = ({ height, width, dpr, isAnimating, children }) => {\n  const canvasRef = React.useRef(null)\n  const actualWidth = width * dpr\n  const actualHeight = height * dpr\n\n  // the canvas' context is stored once it's created\n  const [context, setContext] = React.useState(null)\n  React.useEffect(() => {\n    if (canvasRef.current !== null) {\n      const canvasContext = canvasRef.current.getContext(\"2d\")\n      if (canvasContext !== null) {\n        canvasContext.scale(dpr, dpr)\n        canvasContext.globalCompositeOperation = \"soft-light\"\n        setContext(canvasContext)\n      }\n    }\n  }, [dpr])\n\n  // making the component and the context re-render at every frame\n  const [frameCount, setFrameCount] = React.useState(0)\n  React.useEffect(() => {\n    let frameId\n    if (isAnimating) {\n      frameId = requestAnimationFrame(() => {\n        setFrameCount(frameCount + 1)\n      })\n    }\n    return () => {\n      cancelAnimationFrame(frameId)\n    }\n  }, [isAnimating, frameCount, setFrameCount])\n\n  // whenever the canvas' dimensions change, it's automatically cleared\n  // we need to re-draw all its children in this case */\n  React.useLayoutEffect(() => {\n    setFrameCount(random(1, true))\n  }, [width, height])\n\n  // we need to clear the whole canvas before drawing the children\n  if (context !== null) {\n    context.clearRect(0, 0, actualWidth, actualHeight)\n\n    // context.fillStyle = \"rgba(0, 0, 0, 0.2)\";\n    // context.fillRect(0, 0, actualWidth, actualHeight);\n  }\n\n  return (\n    <CanvasContext.Provider value={context}>\n      <FrameContext.Provider value={frameCount}>\n        <canvas\n          ref={canvasRef}\n          height={actualHeight}\n          width={actualWidth}\n          style={{ width, height }}\n        />\n        {children}\n      </FrameContext.Provider>\n    </CanvasContext.Provider>\n  )\n}\n\nexport const useCanvas = () => {\n  React.useContext(FrameContext)\n  const renderingContext = React.useContext(CanvasContext)\n  return renderingContext\n}\n\nexport const useAnimation = (initialValue, valueUpdater) => {\n  const animatedValue = React.useRef(initialValue)\n  animatedValue.current = valueUpdater(animatedValue.current)\n  return animatedValue.current\n}\n","import random from \"lodash/random\";\nimport isArray from \"lodash/isArray\";\n\nconst getPositionBetween = (min, max, variance) =>\n  random(min - variance, max + variance);\n\nconst hueVariance = 40;\n\nexport const getRandomColor = (baseHue, hueVariance) => {\n  const hue = random(baseHue - hueVariance, baseHue + hueVariance);\n  const saturation = random(4, 55);\n\n  return `hsla(${hue}, ${saturation}%, ${random(30, 80)}%, ${random(\n    0.2,\n    0.6\n  )})`;\n};\n\nexport const getRandomHexagon = ({ baseSize, baseHue, x, y }) => {\n  const size = random(baseSize * 1.2, baseSize * 2);\n  const positionVariance = Math.round(0.1 * baseSize);\n\n  const [Xmin, Xmax] = isArray(x) ? x : [x, x];\n  const [Ymin, Ymax] = isArray(y) ? y : [y, y];\n\n  return {\n    x: getPositionBetween(\n      Xmin - size * 0.5,\n      Xmax - size * 0.5,\n      positionVariance\n    ),\n    y: getPositionBetween(\n      Ymin - size * 0.5,\n      Ymax - size * 0.5,\n      positionVariance\n    ),\n    size,\n    color: getRandomColor(baseHue, hueVariance),\n    initialRotation: random(0, 90),\n    rotationSpeed: random(-0.1, 0.1),\n  };\n};\n\nexport const getHexagon = ({ width, height }) => {\n  console.log(\"W:\", width, \". H:\", height);\n\n  return [\n    {\n      x: 400,\n      y: 100,\n      size: 400,\n      color: getRandomColor(200, 300),\n      initialRotation: random(0, 90),\n      rotationSpeed: 1,\n    },\n  ];\n};\n\nexport const getHexagonsToFillZone = ({ width, height }) => {\n  const baseHue = random(200, 300);\n\n  const smallerSize = Math.min(width, height);\n\n  /* putting big hexagons in the screen corners */\n  /* so that we have the whole screen covered */\n  const cornerHexagons = [];\n  for (let i = 0; i <= Math.round(width / smallerSize); i++) {\n    for (let j = 0; j <= Math.round(height / smallerSize); j++) {\n      cornerHexagons.push(\n        getRandomHexagon({\n          baseSize: Math.max(width, height),\n          x: i * width,\n          y: j * height,\n          baseHue,\n        })\n      );\n    }\n  }\n\n  /* Then adding some more hexagons randomly on the screen */\n  const extraHexagons = [...Array(random(5, 10))].map(() =>\n    getRandomHexagon({\n      baseSize: smallerSize,\n      x: [0, width],\n      y: [0, height],\n      baseHue,\n    })\n  );\n  return [...cornerHexagons, ...extraHexagons];\n};\n","import { useCanvas, useAnimation } from \"./Canvas\";\n\nexport const Hexagon = ({\n  x,\n  y,\n  size,\n  color,\n  initialRotation,\n  rotationSpeed,\n}) => {\n  const context = useCanvas();\n\n  const animatedAngle = useAnimation(\n    initialRotation,\n    (angleValue) => angleValue + rotationSpeed\n  );\n\n  if (context !== null) {\n    const edgeLength = size * 0.5;\n\n    context.beginPath();\n    // This article explains all the math behind hexagons\n    // https://www.redblobgames.com/grids/hexagons/\n    [30, 90, 150, 210, 270, 330].forEach((angle, index) => {\n      const radAngle = ((angle + animatedAngle) * Math.PI) / 180;\n      const point = {\n        x: x + edgeLength + edgeLength * Math.cos(radAngle),\n        y: y + edgeLength + edgeLength * Math.sin(radAngle),\n      };\n\n      if (index === 0) {\n        context.moveTo(point.x, point.y);\n      } else {\n        context.lineTo(point.x, point.y);\n      }\n    });\n    context.fillStyle = color;\n    context.fill();\n  }\n\n  return null;\n};\n","import React from \"react\"\nimport { Canvas } from \"../../components/Canvas\"\nimport { getHexagonsToFillZone } from \"../../components/random-helpers\"\nimport { Hexagon } from \"../../components/Hexagon\"\nimport { useDimensions } from \"../../components/use-dimensions\"\n\nconst CanvasPage = () => {\n  const [ref, { width, height, dpr }] = useDimensions()\n\n  console.log(\"Width Height DPR REF\", width, height, dpr, ref)\n\n  return (\n    <div style={{ height: \"80vh\" }} ref={ref}>\n      {width === undefined || height === undefined || dpr === undefined ? (\n        <div>{\"🤔\"}</div>\n      ) : (\n        <Canvas width={width} height={height} dpr={dpr} isAnimating={true}>\n          {getHexagonsToFillZone({\n            height: height * dpr,\n            width: width * dpr,\n          }).map((hexagon, index) => (\n            <Hexagon key={index} {...hexagon} />\n          ))}\n        </Canvas>\n      )}\n    </div>\n  )\n}\n\nexport default CanvasPage\n","import { useState, useEffect, useCallback } from \"react\"\nimport debounce from \"lodash/debounce\"\n\nexport function useDimensions() {\n  const [dimensions, setDimensions] = useState({})\n  const [node, setNode] = useState()\n  const ref = useCallback(node => {\n    setNode(node)\n  }, [])\n\n  useEffect(() => {\n    if (node !== undefined) {\n      let request\n      const measure = () => {\n        request = window.requestAnimationFrame(() => {\n          console.log(\"NODE\", node)\n          const rect = node.getBoundingClientRect()\n\n          console.log(\"RECT:\", rect.height, rect.width)\n          setDimensions({\n            width: rect.width,\n            height: rect.height,\n            dpr: window.devicePixelRatio || 1,\n          })\n        })\n      }\n      measure()\n\n      const resizeListener = debounce(measure, 100)\n      window.addEventListener(\"resize\", resizeListener)\n\n      return () => {\n        window.removeEventListener(\"resize\", resizeListener)\n        window.cancelAnimationFrame(request)\n      }\n    }\n  }, [node])\n\n  return [ref, dimensions]\n}\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nmodule.exports = baseRandom;\n","var baseRandom = require('./_baseRandom'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n"],"sourceRoot":""}