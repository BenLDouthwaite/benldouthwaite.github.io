{"version":3,"sources":["webpack://bendouthwaite.com/./src/components/recent-content.js","webpack://bendouthwaite.com/./src/pages/home/home.js","webpack://bendouthwaite.com/./src/pages/index.js"],"names":["RecentContentItem","props","headingStyle","linkStyle","useState","hover","setHover","toggleHover","color","Link","to","item","link","itemProp","style","textDecoration","onMouseEnter","onMouseLeave","title","summary","map","key","Container","data","location","siteTitle","site","siteMetadata"],"mappings":"8MAuBMA,EAAoB,SAAAC,GAExB,IAMIC,EACAC,EAPJ,GAA0BC,eAAS,GAA5BC,EAAP,KAAcC,EAAd,KAEMC,EAAc,SAAAF,GAClBC,EAASD,IAaX,OARIA,GACFH,EAAe,CAAEM,MAAO,UACxBL,EAAY,CAAEK,MAAO,aAErBN,EAAe,GACfC,EAAY,IAIZ,gBAAC,EAAAM,KAAD,CACEC,GAAE,GAAKT,EAAMU,KAAKC,KAClBC,SAAS,MACTC,MAAO,CAAEC,eAAgB,QACzBC,aAAc,kBAAMT,GAAY,IAChCU,aAAc,kBAAMV,GAAY,KAEhC,sBAAIO,MAAOZ,GAAeD,EAAMU,KAAKO,OACrC,qBAAGJ,MAAOX,GAAYF,EAAMU,KAAKQ,WAKvC,EApDsB,SAAAlB,GAUpB,OACE,gCACE,4CAXuB,CACzB,CACEiB,MAAO,2CACPC,QACE,6EACFP,KAAM,WAOcQ,KAAI,SAAAT,GACtB,OAAO,gBAACX,EAAD,CAAmBW,KAAMA,EAAMU,IAAKV,EAAKC,YCLxD,EARa,WACX,OACE,gBAACU,EAAA,EAAD,KACE,gBAAC,EAAD,S,2ECUN,UAVc,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACfC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBT,QAAxB,QAElB,OACE,gBAAC,IAAD,CAAQM,SAAUA,EAAUN,MAAOO,GACjC,gBAAC,UAAD","file":"component---src-pages-index-js-cfa00a86c0400aa19e46.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\n\nconst RecentContent = props => {\n  const recentContentItems = [\n    {\n      title: \"GraphQL query for content sorted by date\",\n      summary:\n        \"TODO Update this component to return content sorted by date, as per /notes\",\n      link: \"/notes\",\n    },\n  ]\n\n  return (\n    <>\n      <h3>Recent content</h3>\n      {recentContentItems.map(item => {\n        return <RecentContentItem item={item} key={item.link} />\n      })}\n    </>\n  )\n}\n\nconst RecentContentItem = props => {\n  // TODO add a 'read more' link?\n  const [hover, setHover] = useState(false)\n\n  const toggleHover = hover => {\n    setHover(hover)\n  }\n\n  var headingStyle\n  var linkStyle\n  if (hover) {\n    headingStyle = { color: \"2d8efd\" }\n    linkStyle = { color: \"#cccccc\" }\n  } else {\n    headingStyle = {}\n    linkStyle = {}\n  }\n\n  return (\n    <Link\n      to={`${props.item.link}`}\n      itemProp=\"url\"\n      style={{ textDecoration: \"none\" }}\n      onMouseEnter={() => toggleHover(true)}\n      onMouseLeave={() => toggleHover(false)}\n    >\n      <h4 style={headingStyle}>{props.item.title}</h4>\n      <p style={linkStyle}>{props.item.summary}</p>\n    </Link>\n  )\n}\n\nexport default RecentContent\n","import * as React from \"react\"\nimport { Container } from \"react-bootstrap\"\nimport RecentContent from \"../../components/recent-content\"\n\nconst Home = () => {\n  return (\n    <Container>\n      <RecentContent />\n    </Container>\n  )\n}\n\nexport default Home\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n\nimport Home from \"./home/home\"\n\nconst Index = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Home />\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}